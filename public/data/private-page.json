{
  "nextAuth": {
    "title": "Tutorials > Private page",
    "next_complexText_1": [
      {
        "type": "text",
        "content": "Once "
      },
      {
        "type": "underlinedText",
        "content": "user is authentified,"
      },
      {
        "type": "text",
        "content": "you can build private routes like a user dashboard, account, etc."
      }
    ],
    "next_highlightedNote_1": [
      {
        "type": "text",
        "content": "If you want to make protected API calls, follow "
      },
      {
        "type": "underlinedText",
        "content": "this tutorial."
      }
    ],
    "next_complexText_2": [
      {
        "type": "text",
        "content": "The "
      },
      {
        "type": "highlightedText",
        "content": "/layout.js"
      },
      {
        "type": "text",
        "content": "in"
      },
      {
        "type": "highlightedText",
        "content": "/dashboard"
      },
      {
        "type": "text",
        "content": "ensures any pages & subpages are private. If the user is not authenticated, he'll be redirected to the login page (see"
      },
      {
        "type": "highlightedText",
        "content": "auth"
      },
      {
        "type": "text",
        "content": "in"
      },
      {
        "type": "text",
        "content": "config.js"
      }
    ],
    "next_plainText_1": "Here's an example of a simple user dashboard showing private user data in a server component",
    "next_codeSnippet_1": {
      "title": "/app/dashboard/page.js",
      "codes": "import { getServerSession } from \"next-auth\";\nimport { authOptions } from \"@/libs/next-auth\";\nimport connectMongo from \"@/libs/mongoose\";\nimport User from \"@/models/User\";\n\nexport default async function Dashboard() {\n  await connectMongo();\n  const session = await getServerSession(authOptions);\n  const user = await User.findById(session.user.id);\n\n  return (\n    <>\n      <main className=\"min-h-screen p-8 pb-24\">\n        <section className=\"max-w-xl mx-auto space-y-8\">\n          <h1 className=\"text-3xl md:text-4xl font-extrabold\">\n            User Dashboard\n          </h1>\n          <p>Welcome {user.name} ðŸ‘‹</p>\n          <p>Your email is {user.email}</p>\n        </section>\n      </main>\n    </>\n  );\n}"
    }
  },
  "supabase": {
    "title": "Tutorials > Private page",
    "supabase_complexText_1": [
      {
        "type": "text",
        "content": "Once "
      },
      {
        "type": "underlinedText",
        "content": "user is authentified,"
      },
      {
        "type": "text",
        "content": "you can build private routes like a user dashboard, account, etc."
      }
    ],
    "supabase_highlightedNote_1": [
      {
        "type": "text",
        "content": "If you want to make protected API calls, follow "
      },
      {
        "type": "underlinedText",
        "content": "this tutorial."
      }
    ],
    "supabase_complexText_2": [
      {
        "type": "text",
        "content": "The "
      },
      {
        "type": "highlightedText",
        "content": "/layout.js"
      },
      {
        "type": "text",
        "content": "in"
      },
      {
        "type": "highlightedText",
        "content": "/dashboard"
      },
      {
        "type": "text",
        "content": "ensures any pages & subpages are private. If the user is not authenticated, he'll be redirected to the login page (see"
      },
      {
        "type": "highlightedText",
        "content": "auth"
      },
      {
        "type": "text",
        "content": "in"
      },
      {
        "type": "text",
        "content": "config.js"
      }
    ],
    "supabase_plainText_1": "Here's an example of a simple user dashboard showing private user data in a server component",
    "supabase_codeSnippet_1": {
      "title": "/app/dashboard/page.js",
      "codes": "import { createClient } from \"@/libs/supabase/server\";\n\nexport const dynamic = \"force-dynamic\";\n\n// This is a private page: It's protected by the layout.js component which ensures the user is authenticated.\n// It's a server compoment which means you can fetch data (like the user profile) before the page is rendered.\nexport default async function Dashboard() {\n  const supabase = createClient();\n  const { data } = await supabase.from(\"todos\").select();\n\n  return (\n    <main className=\"min-h-screen p-8 pb-24\">\n      <section className=\"max-w-xl mx-auto space-y-8\">\n        <h1 className=\"text-3xl md:text-4xl font-extrabold\">Private Page</h1>\n\n        {/* You will only see something if you create an SQL table called todos with at least 1 row */}\n        <pre>{JSON.stringify(data, null, 2)}</pre>\n      </section>\n    </main>\n  );\n}\n"
    }
  }
}